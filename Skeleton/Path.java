//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Untitled
//  @ File Name : Path.java
//  @ Date : 2014.03.11.
//  @ Author : itee_team
//
//




public class Path extends Cell {
	/**
	 * Az egy lépésben következõ Path cellák címei.
	**/
	private ArrayList<Path> nextPaths;
	
	/**
	 * Az úton lévõ akadály interfészû változó címe. Ha nincs akadály az úton, null.
	**/
	private IObstacle myIObstacle;
	
	/**
	 * Az éppen a Path-en tartózkodó ellenség(ek) címe(i).
	**/
	private ArrayList<Enemy> enemies;
	
	private Obstacle myPath;
	
	private Enemy myPath;
	
	private Tower paths;
	
	/**
	 * Konstruktor
	**/
	public void Path() {
	
	}
	
	/**
	 * A bool típusú visszatérési értékben megmondja, hogy van-e ellenség a Path-en. 
	**/
	public bool hasEnemy() {
	
	}
	
	/**
	 * Törli a paraméterben kapott IPathPlaceable interfészû változót a Path-rõl. 
	 *
	 * @param    e
	**/
	public bool deleteEnemy(Enemy e) {
	
	}
	
	public bool deleteIObstacle(Object io IObstacle) {
	
	}
	
	/**
	 * Beregisztrálja a paraméterben kapott IPathPlaceable interfészû változót a Path-en. 
	 *
	 * @param    ipp
	**/
	public void registerIPathPlaceable(IPathPlaceable ipp) {
	
	}
	
	/**
	 * Beregisztrálja a paraméterben kapott IObstacle interfészû változót a Path-en. 
	 *
	 * @param    io
	**/
	public void registerIObstacle(IObstacle io) {
	
	}
	
	/**
	 * Beregisztrálja a paraméterben kapott Enemy típusú változót a Path-en. 
	 *
	 * @param    e
	**/
	public void registerEnemy(Enemy e) {
	
	}
	
	/**
	 * Visszatér a Path-en lévõ ellenség(ek)el.
	**/
	public ArrayList<Enemy> getEnemies() {
	
	}
	
	/**
	 * Visszatér a nextPaths lista egy elemével, ahova az enemy majd léphet.
	**/
	public Path getNext() {
	
	}
}
